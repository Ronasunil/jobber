heartbeat.config.monitors:
  path: ${path.config}/monitors.d/*.yml
  reload.enabled: false
  reload.period: 5s

heartbeat.monitors:
  - type: http
    id: jobber-gateway
    name: jobber gateway api service
    schedule: "@every 5s"
    urls: ["http://gateway_container:2000/gateway-health"]
    check.request.method: GET
    check.response.status: [200]

  - type: http
    id: jobber-app-notification
    name: jobber app-notification api service
    schedule: "@every 5s"
    urls: ["http://app_notification_container:2006/app-notification-health"]
    check.request.method: GET
    check.response.status: [200]

  - type: http
    id: jobber-auth
    name: jobber authentication api service
    schedule: "@every 5s"
    urls: ["http://auth_container:2002/auth-health"]
    check.request.method: GET
    check.response.status: [200]

  - type: http
    id: jobber-chat
    name: jobber authentication api service
    schedule: "@every 5s"
    urls: ["http://chat_container:2005/chat-health"]
    check.request.method: GET
    check.response.status: [200]

  - type: http
    id: jobber-gig
    name: jobber gig api service
    schedule: "@every 5s"
    urls: ["http://gig_container:2004/gig-health"]
    check.request.method: GET
    check.response.status: [200]

  - type: http
    id: jobber-notification
    name: jobber notiffication api service
    schedule: "@every 5s"
    urls: ["http://notifications_container:2001/notification-health"]
    check.request.method: GET
    check.response.status: [200]

  - type: http
    id: jobber-order
    name: jobber order api service
    schedule: "@every 5s"
    urls: ["http://order_container:2007/order-health"]
    check.request.method: GET
    check.response.status: [200]

  - type: http
    id: jobber-review
    name: jobber review api service
    schedule: "@every 5s"
    urls: ["http://review_container:2008/review-health"]
    check.request.method: GET
    check.response.status: [200]

  - type: http
    id: jobber-user
    name: jobber user api service
    schedule: "@every 5s"
    urls: ["http://user_container:2003/user-health"]
    check.request.method: GET
    check.response.status: [200]
# output.elasticsearch:
#   hosts: ["http://elasticsearch_container:9200"]

